# -*- coding: utf-8 -*-
"""Naive_bayes.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1O2NAchDtNdL-BgsILBKuh2ULxIACcbsc
"""



import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset = pd.read_csv("/content/iris (1).csv")
X = dataset.iloc[:, [3, 4]]
y = dataset.iloc[:, 5]
print("Prediction evidence:\n", X.head())
print("\nFinal Target:\n", y.head())

dataset.shape

dataset.info()

dataset.isna().sum()

X = X.values
y = y.values

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.30)

from sklearn.preprocessing import StandardScaler


sc = StandardScaler()


X_train = sc.fit_transform(X_train)


X_test = sc.transform(X_test)

from sklearn.naive_bayes import GaussianNB


classifier = GaussianNB()


classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)

print(y_pred)

import seaborn as sns
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True)

dataplot=sns.heatmap(dataset.corr(),annot=True)
plt.show()

y_pred = classifier.predict(X_test)
y_pred

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
from sklearn.metrics import accuracy_score
print ("Accuracy : ", accuracy_score(y_test, y_pred))
cm

df = pd.DataFrame({'Real Values':y_test, 'Predicted Values':y_pred})
df

# @title Predicted Values

from matplotlib import pyplot as plt
import seaborn as sns
df.groupby('Predicted Values').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

