# -*- coding: utf-8 -*-
"""DecisionTree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QjEos-rZsULgkhHOIV1uPMg-xYdN1H-0
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline

dataset = pd.read_csv("/content/iris.csv")
X = dataset.iloc[:, [3, 4]]
y = dataset.iloc[:, 5]
print("Prediction evidence:\n", X.head())
print("\nFinal Target:\n", y.head())

dataset.shape

dataset.info()

import seaborn as sns

X,y

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(
     X, y, test_size=0.33, random_state=42)

X_train

from sklearn.tree import DecisionTreeClassifier

treemodel=DecisionTreeClassifier()

treemodel.fit(X_train,y_train)

from sklearn import tree
plt.figure(figsize=(15,10))
tree.plot_tree(treemodel,filled=True)



y_pred=treemodel.predict(X_test)

y_pred

from sklearn.metrics import accuracy_score,classification_report

score=accuracy_score(y_pred,y_test)
print(score)

print(classification_report(y_pred,y_test))

parameter={
 'criterion':['gini','entropy','log_loss'],
  'splitter':['best','random'],
  'max_depth':[1,2,3,4,5],
  'max_features':['auto', 'sqrt', 'log2']

}

from sklearn.model_selection import GridSearchCV

treemodel=DecisionTreeClassifier()
cv=GridSearchCV(treemodel,param_grid=parameter,cv=5,scoring='accuracy')

cv.fit(X_train,y_train)

cv.best_params_

y_test

y_pred

y_pred=cv.predict(X_test)

from sklearn.metrics import accuracy_score, classification_report

score=accuracy_score(y_pred,y_test)

score

print(classification_report(y_pred,y_test))

